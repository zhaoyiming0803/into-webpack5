{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://test-webpack5/./AuthingMove/core/index.js","webpack://test-webpack5/./AuthingMove/core/instance/index.js","webpack://test-webpack5/./AuthingMove/core/global-api/index.js","webpack://test-webpack5/./AuthingMove/core/global-api/use.js","webpack://test-webpack5/./AuthingMove/api-proxy/index.js","webpack://test-webpack5/./AuthingMove/api-proxy/transform.js","webpack://test-webpack5/./AuthingMove/shared/index.js","webpack://test-webpack5/./AuthingMove/api-proxy/platforms/wx-ali.js","webpack://test-webpack5/webpack/bootstrap","webpack://test-webpack5/webpack/runtime/define property getters","webpack://test-webpack5/webpack/runtime/global","webpack://test-webpack5/webpack/runtime/hasOwnProperty shorthand","webpack://test-webpack5/webpack/runtime/make namespace object","webpack://test-webpack5/./src/index.js"],"sourcesContent":["import AuthingMove from './instance'\nimport { initGlobalApi } from './global-api'\n\ninitGlobalApi(AuthingMove)\n\nAuthingMove.version = __version__\n\nglobal.AuthingMove = AuthingMove\n\nexport default AuthingMove\n","export default function AuthingMove () {}","import { initUse } from './use'\n\nexport function initGlobalApi (AuthingMove) {\n  initUse(AuthingMove)\n}\n","export function initUse (AuthingMove) {\n  AuthingMove.use = function use (plugin, options = {}) {\n    const installedPlugins = (this._installedPlugins || (this._installedPlugins = []))\n\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n  \n    const args = [options]\n  \n    args.unshift(this)\n  \n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args)\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args)\n    }\n  \n    installedPlugins.push(plugin)\n  \n    return this\n  }\n}\n","import transformApi from './transform'\nimport { error } from '../shared'\n\nexport default function install (AuthingMove, options = {}) {\n  const {\n    custom = {} // 自定义转换规则\n  } = options\n  const from = __authing_move_src_mode__ || '__authing_move_src_mode_wx__'\n  const to = __authing_move_mode__ || 'wx'\n\n  const transformedApi = transformApi({\n    from,\n    to,\n    custom\n  })\n\n  Object.keys(transformedApi).forEach(api => {\n    try {\n      if (typeof transformedApi[api] !== 'function') {\n        AuthingMove[api] = transformedApi[api]\n        return\n      }\n\n      AuthingMove[api] = (...args) => transformedApi[api].apply(AuthingMove, args)\n    } catch (e) {\n      error(`Call ${AuthingMove}.${api} error:` + JSON.stringify(e))\n    }\n  })\n}\n","import { error, getEnvContext, generateFromMap, makeMap } from '../shared'\nimport getWxToAliApi from './platforms/wx-ali'\n\nconst fromMap = generateFromMap()\n\nfunction joinName (from = '', to = '') {\n  return `${fromMap[from]}_${to}`\n}\n\nexport default function transformApi (options) {\n  const envContext = getEnvContext()\n  const { from, to } = options\n  const fromTo = joinName(from, to)\n  const platformMap = {\n    'wx_ali': getWxToAliApi()\n  }\n  const needProxy = Object.create(null)\n  const transformedApi = platformMap[fromTo] || {}\n\n  Object.keys(envContext).concat(Object.keys(transformedApi)).forEach(key => {\n    needProxy[key] = envContext[key] || transformedApi[key]\n  })\n\n  const apis = Object.create(null)\n\n  Object.keys(needProxy).forEach(api => {\n    if (typeof needProxy[api] !== 'function') {\n      apis[api] = needProxy[api]\n      return\n    }\n\n    apis[api] = (...args) => {\n      let from = options.from\n      const to = options.to\n      \n      if (args.length) {\n        from = args.pop()\n\n        if (typeof from !== 'string' || !fromMap[from]) {\n          args.push(from)\n          from = options.from\n        }\n      }\n\n      const fromTo = joinName(from, to)\n\n      if (options.custom[fromTo] && options.custom[fromTo][api]) {\n        return options.custom[fromTo][api].apply(this, args)\n      }\n\n      if (platformMap[fromTo] && platformMap[fromTo][api]) {\n        return platformMap[fromTo][api].apply(this, args)\n      }\n\n      if (envContext[api]) {\n        return envContext[api].apply(this, args)\n      }\n\n      error(`当前小程序环境不存在 ${api} 方法`)\n    }\n  })\n\n  return apis\n}\n","export function getEnvContext () {\n  switch (__authing_move_mode__) {\n    case 'wx':\n      return wx\n    case 'ali':\n      return ali\n    case 'baidu':\n      return swan\n    case 'qq':\n      return qq\n    case 'tt':\n      return tt\n    case 'jd':\n      return jd\n    case 'qa':\n      return qa\n  }\n}\n\nexport function generateFromMap () {\n  const platforms = ['wx', 'ali', 'baidu', 'qq', 'tt', 'jd', 'qa']\n  return platforms.reduce((map, platform) => {\n    map[`__authing_move_mode_${platform}__`] = platform\n    return map\n  }, {})\n}\n\nexport function makeMap (arr) {\n  return arr.reduce((map, item) => {\n    map[item] = true\n    return map\n  }, {})\n}\n\nexport function warn (message) {\n  console.warn && console.warn(`[AuthingMove/api-proxy warn]:\\n ${message}`)\n}\n\nexport function error (message) {\n  console.error && console.error(`[AuthingMove/api-proxy error]:\\n ${message}`)\n}\n\nexport function noop () {}\n\nexport function adaptOptions (originalOptions, matchedOptions, extraOptions) {\n  let options = {}\n  \n  Object.keys(originalOptions).forEach(key => {\n    const _key = matchedOptions.hasOwnProperty(key) ? matchedOptions[key] : key\n    if (_key) {\n      options[_key] = originalOptions[key]\n    }\n  })\n\n  options = Object.assign({}, options, extraOptions)\n\n  return options\n}\n\nexport function handleSuccess (originalOptions, wrappedSuccess = noop, context) {\n  if (!originalOptions.success) {\n    return\n  }\n\n  const _this = context || this\n  const cachedSuccess = originalOptions.success\n\n  originalOptions.success = res => cachedSuccess.call(_this, wrappedSuccess(res) || res)\n}\n","import { getEnvContext, error, adaptOptions, handleSuccess } from '../../shared'\n\nconst envContext = getEnvContext()\n\nexport default function getWxToAliApi () {\n  return {\n    /**\n     * 网络\n     */\n    request (options = {}) {\n      const _options = adaptOptions(options, {\n        header: 'headers'\n      })\n\n      handleSuccess(_options, res => {\n        return adaptOptions(res, {\n          Headers: 'header',\n          status: 'statusCode'\n        })\n      })\n\n      // version > 1.11.0\n      if (envContext.canIUse('request')) {\n        return envContext.request(_options)\n      }\n\n      // will be archived, support dingding miniprogram\n      return envContext.httpRequest(_options)\n    },\n\n    /**\n     * 数据缓存\n     */\n    setStorageSync (key, data) {\n      envContext.setStorageSync({\n        key,\n        data\n      })\n    },\n\n    removeStorageSync (key) {\n      envContext.removeStorageSync({ key })\n    },\n\n    getStorageSync (key) {\n      return envContext.getStorageSync({ key }).data\n    },\n\n    /**\n     * 扫码\n     */\n    scanCode (options = {}) {\n      const _options = adaptOptions(options, {\n        onlyFromCamera: 'hideAlbum',\n        scanType: 'type'\n      })\n\n      const typeMap = {\n        barCode: 'bar',\n        qrCode: 'qr'\n      }\n\n      if (_options.type) {\n        const _type = typeMap[_options.type]\n        if (_type) {\n          _options.type = _type\n        } else {\n          error('支付宝小程序只能扫描【条形码】和【二维码】，请将 type 设置为 barCode 或 qrCode !!!')\n          _options.type = 'qr'\n        }\n      }\n\n      handleSuccess(_options, res => {\n        return adaptOptions(res, {\n          code: 'result'\n        })\n      })\n\n      envContext.scan(_options)\n    },\n\n    /**\n     * 开放接口\n     */\n    login (options = {}) {\n      const _options = adaptOptions(options)\n\n      handleSuccess(_options, res => {\n        return adaptOptions(res, {\n          authCode: 'code'\n        })\n      })\n\n      envContext.getAuthCode(_options)\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import { funcA } from './a'\n// import { funcB } from './b'\nimport AuthingMove from '../AuthingMove/core'\nimport apiProxy from '../AuthingMove/api-proxy'\n\nAuthingMove.use(apiProxy)\n\n// export const str = funcA() + '--------' + funcB()\n"],"names":[],"sourceRoot":""}